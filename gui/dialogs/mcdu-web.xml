<?xml version="1.0"?>

<!-- Copyright (c) 2025 Josh Davidson (Octal450) -->

<PropertyList>
	
	<name>mcdu-web</name>
	<layout>vbox</layout>
	<pref-width>480</pref-width>
	
	<nasal>
		<open>
			props.globals.initNode("/sim/http/mcduweb/local-ip", "", "STRING");
		</open>
	</nasal>	
	
    <group>
        <layout>hbox</layout>
        <text>
            <halign>left</halign>
            <label>Remote MCDU</label>
        </text>
		
        <button>
            <halign>right</halign>
            <pref-width>20</pref-width>
            <pref-height>20</pref-height>
            <legend>X</legend>
            <key>Esc</key>
            <binding>
                <command>dialog-close</command>
            </binding>
        </button>
    </group>
	
    <hrule/>
	
	<group>
		<layout>vbox</layout>
		
		<text>
			<halign>center</halign>
			<label>Please check: HTTP service is required to be running.</label>
			<visible>
				<equals>
					<property>/sim/http/running</property>
					<value>0</value>
				</equals>
			</visible>
		</text>
		<text>		
			<halign>center</halign>
			<label>Start FlightGear with -httpd=8080 or enable the HTTP option</label>
			<visible>
				<equals>
					<property>/sim/http/running</property>
					<value>0</value>
				</equals>
			</visible>
		</text>
	
    </group>
	
	<group>
		<layout>vbox</layout>

		<text>
			<halign>center</halign>
			<label>Open MCDU on this system:</label>
			<visible>
				<equals>
					<property>/sim/http/running</property>
					<value>1</value>
				</equals>
			</visible>
		</text>
		
		<button>
			<halign>center</halign>
			<legend>Launch Remote MCDU</legend>
			<visible>
				<equals>
					<property>/sim/http/running</property>
					<value>1</value>
				</equals>
			</visible>
			<binding>
				<command>nasal</command>
				<script>
					var n = getprop("/sim/http/running",0);
					if (n != 1) {
						gui.popupTip("Internal webserver not running. Restart FlightGear with -httpd=8080");
					} else {
						var _url = "http://localhost:" ~ getprop("/sim/http/options/listening-port") ~ "/aircraft-dir/gui/webpanel/mcdu/mcdu.html";
						fgcommand("open-browser", props.Node.new({ "url": _url }));
					}				
				</script>
			</binding>
		</button>
	</group>	
	
	<group>
		<layout>vbox</layout>
		
		<text>
			<halign>center</halign>
			<label></label>
		</text>
		<text>
			<halign>center</halign>
			<label>Scan QR code with your smartphone or tablet</label>
			<visible>
				<equals>
					<property>/sim/http/running</property>
					<value>1</value>
				</equals>
			</visible>
		</text>
	</group>
	
	<group>
		<layout>hbox</layout>
		
		<text>
			<halign>right</halign>
			<label>Local IP:</label>
			<visible>
				<equals>
					<property>/sim/http/running</property>
					<value>1</value>
				</equals>
			</visible>
		</text>
		<input>
			<pref-width>120</pref-width>
			<padding>5</padding>
			<property>/sim/http/mcduweb/local-ip</property>
			<visible>
				<equals>
					<property>/sim/http/running</property>
					<value>1</value>
				</equals>
			</visible>
			<binding>
				<command>dialog-apply</command>
			</binding>			
			<live>true</live>
		</input>
		
		<button>
			<legend>Get QR code</legend>
			<pref-width>180</pref-width>
			<padding>5</padding>
			<visible>
				<equals>
					<property>/sim/http/running</property>
					<value>1</value>
				</equals>
			</visible>
			<binding>
				<command>nasal</command>
				<script>
					var _url = "";
					if (size(getprop("/sim/http/mcduweb/local-ip")) > 6) {
						if (getprop("/sim/http/running", 0) == 1) _url = "http://" ~ getprop("/sim/http/mcduweb/local-ip") ~ ":" ~ getprop("/sim/http/options/listening-port") ~ "/aircraft-dir/gui/webpanel/mcdu/mcdu.html";
						qrCanvas.setColorBackground(1, 1, 1, 1);
						qrCode.createChild("image").set("src", "https://qr.eletto.dev/" ~ _url).setSize(300,300).setTranslation(10, 10); 					
					}
				</script>
			</binding>
		</button>
	</group>
	
	<canvas>
		<name>mcduwebqr</name>
		<valign>center</valign>
		<halign>center</halign>
		<stretch>false</stretch>
		<pref-width>320</pref-width>
		<pref-height>320</pref-height>
		<nasal>
			<load>
				<![CDATA[
				    var n = props.globals.getNode("/sim/http/running");
					var qrCanvas = canvas.get(cmdarg());
					var qrCode = qrCanvas.createGroup();
					qrCanvas.setColorBackground(0, 0, 0, 0);
				]]>
			</load>
			<unload>
				<![CDATA[
					qrCanvas.del();
					qrCanvas = nil;
					qrCode = nil;
				]]>
			</unload>
		</nasal>
	</canvas>
	
	<group>
		<layout>vbox</layout>
		
		<text>
			<halign>center</halign>
			<label>* QR code provided by https://qr.eletto.dev/</label>
			<visible>
				<equals>
					<property>/sim/http/running</property>
					<value>1</value>
				</equals>
			</visible>
		</text>
	</group>

</PropertyList>
